Stephanies-MacBook-Pro-66:problem-set-01-stephanielam0506 stephanielam$ jest FAIL  problem-a/problem.spec.js  Used test-driven development    ? Used Jest to pre-test code, saved in `pretest.txt` (1 ms)  Source code is valid    ? HTML validates without errors (12 ms)    ? CSS validates without errors (173 ms)  Has required HTML    ? Specifies charset (3 ms)    ? Includes page title (1 ms)    ? Includes author metadata (1 ms)    ? Has a top-level heading (1 ms)    ? Has an image (2 ms)    ? Includes a paragraph (1 ms)    ? Includes a hyperlink in the paragraph (1 ms)    ? Includes a list    ? List has at least 3 items (1 ms)  Has required CSS    ? Links in local stylesheet (1 ms)    ? Body has default font size (1 ms)    ? Body has default font family (1 ms)    ? Paragraphs have specified line height (1 ms)    ? Images have constrained height    ? Important list item is colored (1 ms)  ? Used test-driven development Ý Used Jest to pre-test code, saved in `pretest.txt`    ENOENT: no such file or directory, open '/Users/stephanielam/Desktop/INFO340/week1/problem-set-01-stephanielam0506/problem-a/pretest.txt'      17 |   test('Used Jest to pre-test code, saved in `pretest.txt`', () => {      18 |     const path = __dirname + '/pretest.txt'    > 19 |     const pretest = fs.readFileSync(path, 'utf-8');         |                        ^      20 |     expect(pretest).toMatch(/FAIL +(problem-a)?\/problem\.spec\.js/)      21 |   })      22 | })      at Object.readFileSync (problem-a/problem.spec.js:19:24)  ? Source code is valid Ý CSS validates without errors    error: Unexpected missing generic font family (font-family-no-missing-generic-family-keyword)           At line 3, column 58.      42 |      43 |   test('CSS validates without errors', async () => {    > 44 |     await expect(cssPath).toHaveNoCssLintErrorsAsync();         |                           ^      45 |   })      46 | });      47 |      at Object.toHaveNoCssLintErrorsAsync (problem-a/problem.spec.js:44:27)  ? Has required HTML Ý Has an image    expect(received).toMatch(expected)    Expected pattern: /^img\/.+/    Received string:  "Carl.webp"      80 |     let img = $('img');      81 |     expect(img.length).toBeGreaterThanOrEqual(1); //has 1+ tags    > 82 |     expect(img.attr('src')).toMatch(/^img\/.+/); //image in folder, uses relative path         |                             ^      83 |     // expect(img.attr('src')).not.toMatch(new RegExp("^(\/)|(http)|([a-zA-z]:)")); //uses a relative path      84 |   })      85 |      at Object.toMatch (problem-a/problem.spec.js:82:29)  ? Has required CSS Ý Body has default font family    expect(received).toMatch(expected)    Expected pattern: /'Helvetica Neue', *'?Helvetica'?, *'?Arial'?, *sans-serif/    Received string:  "'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'"      131 |   test('Body has default font family', () => {      132 |     let fontFamilySingleQuotes = ($('body').css('font-family')).replace(/"/g, '\'');    > 133 |     expect(fontFamilySingleQuotes).toMatch(/'Helvetica Neue', *'?Helvetica'?, *'?Arial'?, *sans-serif/);          |                                    ^      134 |   })      135 |      136 |   test('Paragraphs have specified line height', () => {      at Object.toMatch (problem-a/problem.spec.js:133:36)  ? Has required CSS Ý Paragraphs have specified line height    expect(received).toEqual(expected) // deep equality    Expected: "1.5"    Received: undefined      136 |   test('Paragraphs have specified line height', () => {      137 |     let p = $('p')    > 138 |     expect(p.css('line-height') ).toEqual('1.5');          |                                   ^      139 |     expect(p.attr('id')).toBe(undefined); //shouldn't have id      140 |     expect(p.attr('class')).toBe(undefined); //shouldn't have class      141 |   })      at Object.toEqual (problem-a/problem.spec.js:138:35)  ? Has required CSS Ý Important list item is colored    expect(received).toBeDefined()    Received: undefined      148 |     let li = $('li[class]')      149 |     expect(li.length).toBe(1); //only one item has class    > 150 |     expect(li.css('color')).toBeDefined(); //that item has a color          |                             ^      151 |   });      152 | })      153 |      at Object.toBeDefined (problem-a/problem.spec.js:150:29)Test Suites: 1 failed, 1 totalTests:       6 failed, 12 passed, 18 totalSnapshots:   0 totalTime:        1.486 sRan all test suites.Stephanies-MacBook-Pro-66:problem-set-01-stephanielam0506 stephanielam$ 